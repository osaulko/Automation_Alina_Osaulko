<?xml version="1.0" encoding="UTF-8"?>
<testng-results retried="3" ignored="3" total="21" passed="13" failed="1" skipped="1">
  <reporter-output>
    <line>
      <![CDATA[Hello i am @Test 1]]>
    </line>
  </reporter-output>
  <suite started-at="2022-10-17T20:57:03 MSK" name="Lecture 9" finished-at="2022-10-17T20:57:24 MSK" duration-ms="20779">
    <groups>
      <group name="test9new">
        <method signature="Lecture9_1Test.test2()[pri:0, instance:Lecture9.Lecture9_1Test@5b4d25e7]" name="test2" class="Lecture9.Lecture9_1Test"/>
      </group> <!-- test9new -->
      <group name="test9">
        <method signature="Lecture9_1Test.test1()[pri:0, instance:Lecture9.Lecture9_1Test@f72203]" name="test1" class="Lecture9.Lecture9_1Test"/>
      </group> <!-- test9 -->
    </groups>
    <test started-at="2022-10-17T20:57:03 MSK" name="Lecture 9 test 1.2" finished-at="2022-10-17T20:57:04 MSK" duration-ms="733">
      <class name="Lecture9.Lecture9_1Test">
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:Lecture9.Lecture9_1Test@5b4d25e7]" started-at="2022-10-17T20:57:04 MSK" name="beforeMethod" finished-at="2022-10-17T20:57:04 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="test2()[pri:0, instance:Lecture9.Lecture9_1Test@5b4d25e7]" started-at="2022-10-17T20:57:04 MSK" name="test2" finished-at="2022-10-17T20:57:04 MSK" duration-ms="15" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test2 -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:Lecture9.Lecture9_1Test@5b4d25e7]" started-at="2022-10-17T20:57:04 MSK" name="afterMethod" finished-at="2022-10-17T20:57:04 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- Lecture9.Lecture9_1Test -->
    </test> <!-- Lecture 9 test 1.2 -->
    <test started-at="2022-10-17T20:57:03 MSK" name="Lecture 9 test 1.1" finished-at="2022-10-17T20:57:04 MSK" duration-ms="718">
      <class name="Lecture9.Lecture9_1Test">
        <test-method is-config="true" signature="beforeTest()[pri:0, instance:Lecture9.Lecture9_1Test@f72203]" started-at="2022-10-17T20:57:03 MSK" name="beforeTest" finished-at="2022-10-17T20:57:03 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:Lecture9.Lecture9_1Test@f72203]" started-at="2022-10-17T20:57:04 MSK" name="beforeClass" finished-at="2022-10-17T20:57:04 MSK" duration-ms="16" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method is-config="true" signature="beforeGroups()[pri:0, instance:Lecture9.Lecture9_1Test@f72203]" started-at="2022-10-17T20:57:04 MSK" name="beforeGroups" finished-at="2022-10-17T20:57:04 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeGroups -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:Lecture9.Lecture9_1Test@f72203]" started-at="2022-10-17T20:57:04 MSK" name="beforeMethod" finished-at="2022-10-17T20:57:04 MSK" duration-ms="16" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="test1()[pri:0, instance:Lecture9.Lecture9_1Test@f72203]" started-at="2022-10-17T20:57:04 MSK" name="test1" finished-at="2022-10-17T20:57:04 MSK" duration-ms="16" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Hello i am @Test 1]]>
            </line>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:Lecture9.Lecture9_1Test@f72203]" started-at="2022-10-17T20:57:04 MSK" name="afterMethod" finished-at="2022-10-17T20:57:04 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterGroups()[pri:0, instance:Lecture9.Lecture9_1Test@f72203]" started-at="2022-10-17T20:57:04 MSK" name="afterGroups" finished-at="2022-10-17T20:57:04 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterGroups -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:Lecture9.Lecture9_1Test@f72203]" started-at="2022-10-17T20:57:04 MSK" name="afterTest" finished-at="2022-10-17T20:57:04 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:Lecture9.Lecture9_1Test@f72203]" started-at="2022-10-17T20:57:04 MSK" name="afterClass" finished-at="2022-10-17T20:57:04 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- Lecture9.Lecture9_1Test -->
    </test> <!-- Lecture 9 test 1.1 -->
    <test started-at="2022-10-17T20:57:03 MSK" name="Lecture 9 test set 1.3" finished-at="2022-10-17T20:57:10 MSK" duration-ms="6236">
      <class name="Lecture9.Lecture9_2Test">
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:Lecture9.Lecture9_2Test@5e1218b4]" started-at="2022-10-17T20:57:04 MSK" name="beforeMethod" finished-at="2022-10-17T20:57:04 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="test2()[pri:2, instance:Lecture9.Lecture9_2Test@5e1218b4]" started-at="2022-10-17T20:57:04 MSK" name="test2" finished-at="2022-10-17T20:57:04 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test2 -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:Lecture9.Lecture9_2Test@5e1218b4]" started-at="2022-10-17T20:57:04 MSK" name="afterMethod" finished-at="2022-10-17T20:57:04 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="test3()[pri:3, instance:Lecture9.Lecture9_2Test@5e1218b4]" started-at="2022-10-17T20:57:04 MSK" name="test3" description="Test 3 from lecture 9" finished-at="2022-10-17T20:57:05 MSK" duration-ms="1061" status="FAIL">
          <exception class="org.testng.internal.thread.ThreadTimeoutException">
            <message>
              <![CDATA[Method Lecture9.Lecture9_2Test.test3() didn't finish within the time-out 1000]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.internal.thread.ThreadTimeoutException: Method Lecture9.Lecture9_2Test.test3() didn't finish within the time-out 1000
at java.base@11.0.15.1/java.lang.Thread.sleep(Native Method)
at app//Lecture9.Lecture9_2Test.pause(Lecture9_2Test.java:58)
at app//Lecture9.Lecture9_2Test.test3(Lecture9_2Test.java:24)
at java.base@11.0.15.1/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base@11.0.15.1/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base@11.0.15.1/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base@11.0.15.1/java.lang.reflect.Method.invoke(Method.java:566)
at app//org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at app//org.testng.internal.invokers.InvokeMethodRunnable.runOne(InvokeMethodRunnable.java:47)
at app//org.testng.internal.invokers.InvokeMethodRunnable.call(InvokeMethodRunnable.java:76)
at app//org.testng.internal.invokers.InvokeMethodRunnable.call(InvokeMethodRunnable.java:11)
at java.base@11.0.15.1/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base@11.0.15.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
at java.base@11.0.15.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
at java.base@11.0.15.1/java.lang.Thread.run(Thread.java:834)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.internal.thread.ThreadTimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test3 -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:Lecture9.Lecture9_2Test@5e1218b4]" started-at="2022-10-17T20:57:04 MSK" name="beforeMethod" finished-at="2022-10-17T20:57:04 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="test4()[pri:4, instance:Lecture9.Lecture9_2Test@5e1218b4]" started-at="2022-10-17T20:57:05 MSK" name="test4" finished-at="2022-10-17T20:57:05 MSK" depends-on-methods="Lecture9.Lecture9_2Test.test3" duration-ms="0" status="SKIP">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method Lecture9.Lecture9_2Test.test4() on instance Lecture9.Lecture9_2Test@5e1218b4 depends on not successfully finished methods 
[Lecture9.Lecture9_2Test.test3() on instance Lecture9.Lecture9_2Test@5e1218b4]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method Lecture9.Lecture9_2Test.test4() on instance Lecture9.Lecture9_2Test@5e1218b4 depends on not successfully finished methods 
[Lecture9.Lecture9_2Test.test3() on instance Lecture9.Lecture9_2Test@5e1218b4]
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:150)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:806)
at org.testng.TestRunner.run(TestRunner.java:601)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:433)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:471)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:58)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
at java.base/java.lang.Thread.run(Thread.java:834)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test4 -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:Lecture9.Lecture9_2Test@5e1218b4]" started-at="2022-10-17T20:57:05 MSK" name="afterMethod" finished-at="2022-10-17T20:57:05 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="test5()[pri:5, instance:Lecture9.Lecture9_2Test@5e1218b4]" started-at="2022-10-17T20:57:05 MSK" name="test5" finished-at="2022-10-17T20:57:06 MSK" duration-ms="1030" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test5 -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:null]" started-at="2022-10-17T20:57:05 MSK" name="beforeMethod" finished-at="2022-10-17T20:57:05 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:null]" started-at="2022-10-17T20:57:05 MSK" name="beforeMethod" finished-at="2022-10-17T20:57:05 MSK" duration-ms="15" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="test5()[pri:5, instance:Lecture9.Lecture9_2Test@5e1218b4]" started-at="2022-10-17T20:57:05 MSK" name="test5" finished-at="2022-10-17T20:57:06 MSK" duration-ms="1046" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test5 -->
        <test-method signature="test5()[pri:5, instance:Lecture9.Lecture9_2Test@5e1218b4]" started-at="2022-10-17T20:57:05 MSK" name="test5" finished-at="2022-10-17T20:57:06 MSK" duration-ms="1046" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test5 -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:null]" started-at="2022-10-17T20:57:05 MSK" name="beforeMethod" finished-at="2022-10-17T20:57:05 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:null]" started-at="2022-10-17T20:57:05 MSK" name="beforeMethod" finished-at="2022-10-17T20:57:05 MSK" duration-ms="16" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:null]" started-at="2022-10-17T20:57:05 MSK" name="beforeMethod" finished-at="2022-10-17T20:57:05 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="test5()[pri:5, instance:Lecture9.Lecture9_2Test@5e1218b4]" started-at="2022-10-17T20:57:05 MSK" name="test5" finished-at="2022-10-17T20:57:06 MSK" duration-ms="1029" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test5 -->
        <test-method signature="test5()[pri:5, instance:Lecture9.Lecture9_2Test@5e1218b4]" started-at="2022-10-17T20:57:05 MSK" name="test5" finished-at="2022-10-17T20:57:06 MSK" duration-ms="1014" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test5 -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:null]" started-at="2022-10-17T20:57:06 MSK" name="afterMethod" finished-at="2022-10-17T20:57:06 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:null]" started-at="2022-10-17T20:57:06 MSK" name="afterMethod" finished-at="2022-10-17T20:57:06 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:null]" started-at="2022-10-17T20:57:06 MSK" name="afterMethod" finished-at="2022-10-17T20:57:06 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:null]" started-at="2022-10-17T20:57:06 MSK" name="afterMethod" finished-at="2022-10-17T20:57:06 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:null]" started-at="2022-10-17T20:57:06 MSK" name="afterMethod" finished-at="2022-10-17T20:57:06 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method retried="true" signature="test6()[pri:6, instance:Lecture9.Lecture9_2Test@5e1218b4]" started-at="2022-10-17T20:57:06 MSK" name="test6" finished-at="2022-10-17T20:57:07 MSK" duration-ms="1030" status="SKIP">
          <exception class="org.testng.internal.thread.ThreadTimeoutException">
            <message>
              <![CDATA[Method Lecture9.Lecture9_2Test.test6() didn't finish within the time-out 1000]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.internal.thread.ThreadTimeoutException: Method Lecture9.Lecture9_2Test.test6() didn't finish within the time-out 1000
at java.base@11.0.15.1/java.lang.Thread.sleep(Native Method)
at app//Lecture9.Lecture9_2Test.pause(Lecture9_2Test.java:58)
at app//Lecture9.Lecture9_2Test.test6(Lecture9_2Test.java:52)
at java.base@11.0.15.1/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base@11.0.15.1/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base@11.0.15.1/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base@11.0.15.1/java.lang.reflect.Method.invoke(Method.java:566)
at app//org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at app//org.testng.internal.invokers.InvokeMethodRunnable.runOne(InvokeMethodRunnable.java:47)
at app//org.testng.internal.invokers.InvokeMethodRunnable.call(InvokeMethodRunnable.java:76)
at app//org.testng.internal.invokers.InvokeMethodRunnable.call(InvokeMethodRunnable.java:11)
at java.base@11.0.15.1/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base@11.0.15.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
at java.base@11.0.15.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
at java.base@11.0.15.1/java.lang.Thread.run(Thread.java:834)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.internal.thread.ThreadTimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test6 -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:Lecture9.Lecture9_2Test@5e1218b4]" started-at="2022-10-17T20:57:06 MSK" name="beforeMethod" finished-at="2022-10-17T20:57:06 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method retried="true" signature="test6()[pri:6, instance:Lecture9.Lecture9_2Test@5e1218b4]" started-at="2022-10-17T20:57:07 MSK" name="test6" finished-at="2022-10-17T20:57:08 MSK" duration-ms="1035" status="SKIP">
          <exception class="org.testng.internal.thread.ThreadTimeoutException">
            <message>
              <![CDATA[Method Lecture9.Lecture9_2Test.test6() didn't finish within the time-out 1000]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.internal.thread.ThreadTimeoutException: Method Lecture9.Lecture9_2Test.test6() didn't finish within the time-out 1000
at java.base@11.0.15.1/java.lang.Thread.sleep(Native Method)
at app//Lecture9.Lecture9_2Test.pause(Lecture9_2Test.java:58)
at app//Lecture9.Lecture9_2Test.test6(Lecture9_2Test.java:52)
at java.base@11.0.15.1/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base@11.0.15.1/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base@11.0.15.1/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base@11.0.15.1/java.lang.reflect.Method.invoke(Method.java:566)
at app//org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at app//org.testng.internal.invokers.InvokeMethodRunnable.runOne(InvokeMethodRunnable.java:47)
at app//org.testng.internal.invokers.InvokeMethodRunnable.call(InvokeMethodRunnable.java:76)
at app//org.testng.internal.invokers.InvokeMethodRunnable.call(InvokeMethodRunnable.java:11)
at java.base@11.0.15.1/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base@11.0.15.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
at java.base@11.0.15.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
at java.base@11.0.15.1/java.lang.Thread.run(Thread.java:834)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.internal.thread.ThreadTimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test6 -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:Lecture9.Lecture9_2Test@5e1218b4]" started-at="2022-10-17T20:57:07 MSK" name="beforeMethod" finished-at="2022-10-17T20:57:07 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:Lecture9.Lecture9_2Test@5e1218b4]" started-at="2022-10-17T20:57:07 MSK" name="afterMethod" finished-at="2022-10-17T20:57:07 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method retried="true" signature="test6()[pri:6, instance:Lecture9.Lecture9_2Test@5e1218b4]" started-at="2022-10-17T20:57:08 MSK" name="test6" finished-at="2022-10-17T20:57:10 MSK" duration-ms="1115" status="SKIP">
          <exception class="org.testng.internal.thread.ThreadTimeoutException">
            <message>
              <![CDATA[Method Lecture9.Lecture9_2Test.test6() didn't finish within the time-out 1000]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.internal.thread.ThreadTimeoutException: Method Lecture9.Lecture9_2Test.test6() didn't finish within the time-out 1000
at java.base@11.0.15.1/java.nio.charset.CharsetEncoder.<init>(CharsetEncoder.java:231)
at java.base@11.0.15.1/sun.nio.cs.SingleByte$Encoder.<init>(SingleByte.java:183)
at java.base@11.0.15.1/sun.nio.cs.MS1251.newEncoder(MS1251.java:55)
at java.base@11.0.15.1/java.lang.StringCoding$StringEncoder.<init>(StringCoding.java:358)
at java.base@11.0.15.1/java.lang.StringCoding.encode(StringCoding.java:512)
at java.base@11.0.15.1/java.lang.String.getBytes(String.java:981)
at app//org.apache.maven.surefire.report.ConsoleOutputCapture$ForwardingPrintStream.println(ConsoleOutputCapture.java:90)
at app//Lecture9.Lecture9_2Test.test6(Lecture9_2Test.java:53)
at java.base@11.0.15.1/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base@11.0.15.1/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base@11.0.15.1/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base@11.0.15.1/java.lang.reflect.Method.invoke(Method.java:566)
at app//org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at app//org.testng.internal.invokers.InvokeMethodRunnable.runOne(InvokeMethodRunnable.java:47)
at app//org.testng.internal.invokers.InvokeMethodRunnable.call(InvokeMethodRunnable.java:76)
at app//org.testng.internal.invokers.InvokeMethodRunnable.call(InvokeMethodRunnable.java:11)
at java.base@11.0.15.1/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base@11.0.15.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
at java.base@11.0.15.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
at java.base@11.0.15.1/java.lang.Thread.run(Thread.java:834)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.internal.thread.ThreadTimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test6 -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:Lecture9.Lecture9_2Test@5e1218b4]" started-at="2022-10-17T20:57:08 MSK" name="afterMethod" finished-at="2022-10-17T20:57:08 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:Lecture9.Lecture9_2Test@5e1218b4]" started-at="2022-10-17T20:57:08 MSK" name="beforeMethod" finished-at="2022-10-17T20:57:08 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:Lecture9.Lecture9_2Test@5e1218b4]" started-at="2022-10-17T20:57:10 MSK" name="afterMethod" finished-at="2022-10-17T20:57:10 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:Lecture9.Lecture9_2Test@5e1218b4]" started-at="2022-10-17T20:57:10 MSK" name="beforeMethod" finished-at="2022-10-17T20:57:10 MSK" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="test6()[pri:6, instance:Lecture9.Lecture9_2Test@5e1218b4]" started-at="2022-10-17T20:57:10 MSK" name="test6" finished-at="2022-10-17T20:57:10 MSK" duration-ms="103" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test6 -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:Lecture9.Lecture9_2Test@5e1218b4]" started-at="2022-10-17T20:57:10 MSK" name="afterMethod" finished-at="2022-10-17T20:57:10 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- Lecture9.Lecture9_2Test -->
    </test> <!-- Lecture 9 test set 1.3 -->
    <test started-at="2022-10-17T20:57:03 MSK" name="Lecture 9 test set 1.4" finished-at="2022-10-17T20:57:24 MSK" duration-ms="20779">
      <class name="Lecture9.Lecture9_1Test">
        <test-method is-config="true" signature="beforeSuite()[pri:0, instance:Lecture9.Lecture9_1Test@f72203]" started-at="2022-10-17T20:57:03 MSK" name="beforeSuite" finished-at="2022-10-17T20:57:03 MSK" duration-ms="93" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:Lecture9.Lecture9_1Test@f72203]" started-at="2022-10-17T20:57:24 MSK" name="afterSuite" finished-at="2022-10-17T20:57:24 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- Lecture9.Lecture9_1Test -->
      <class name="Lecture9.Lecture9_3Test">
        <test-method is-config="true" signature="setUp()[pri:0, instance:Lecture9.Lecture9_3Test@14379273]" started-at="2022-10-17T20:57:03 MSK" name="setUp" finished-at="2022-10-17T20:57:14 MSK" duration-ms="10297" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="preconditions(java.lang.String)[pri:0, instance:Lecture9.Lecture9_3Test@14379273]" started-at="2022-10-17T20:57:14 MSK" name="preconditions" finished-at="2022-10-17T20:57:15 MSK" duration-ms="896" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://www.saucedemo.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- preconditions -->
        <test-method signature="login(java.lang.String,java.lang.String)[pri:0, instance:Lecture9.Lecture9_3Test@14379273]" started-at="2022-10-17T20:57:15 MSK" name="login" data-provider="login data" finished-at="2022-10-17T20:57:16 MSK" duration-ms="939" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[standard_user]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[secret_sauce]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method is-config="true" signature="preconditions(java.lang.String)[pri:0, instance:Lecture9.Lecture9_3Test@14379273]" started-at="2022-10-17T20:57:16 MSK" name="preconditions" finished-at="2022-10-17T20:57:16 MSK" duration-ms="597" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://www.saucedemo.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- preconditions -->
        <test-method signature="login(java.lang.String,java.lang.String)[pri:0, instance:Lecture9.Lecture9_3Test@14379273]" started-at="2022-10-17T20:57:16 MSK" name="login" data-provider="login data" finished-at="2022-10-17T20:57:17 MSK" duration-ms="577" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[locked_out_user]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[secret_sauce]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method is-config="true" signature="preconditions(java.lang.String)[pri:0, instance:Lecture9.Lecture9_3Test@14379273]" started-at="2022-10-17T20:57:17 MSK" name="preconditions" finished-at="2022-10-17T20:57:17 MSK" duration-ms="202" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://www.saucedemo.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- preconditions -->
        <test-method signature="login(java.lang.String,java.lang.String)[pri:0, instance:Lecture9.Lecture9_3Test@14379273]" started-at="2022-10-17T20:57:17 MSK" name="login" data-provider="login data" finished-at="2022-10-17T20:57:18 MSK" duration-ms="633" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[problem_user]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[secret_sauce]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method is-config="true" signature="preconditions(java.lang.String)[pri:0, instance:Lecture9.Lecture9_3Test@14379273]" started-at="2022-10-17T20:57:18 MSK" name="preconditions" finished-at="2022-10-17T20:57:18 MSK" duration-ms="170" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://www.saucedemo.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- preconditions -->
        <test-method signature="login(java.lang.String,java.lang.String)[pri:0, instance:Lecture9.Lecture9_3Test@14379273]" started-at="2022-10-17T20:57:18 MSK" name="login" data-provider="login data" finished-at="2022-10-17T20:57:23 MSK" duration-ms="5538" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[performance_glitch_user]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[secret_sauce]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method is-config="true" signature="stop()[pri:0, instance:Lecture9.Lecture9_3Test@14379273]" started-at="2022-10-17T20:57:23 MSK" name="stop" finished-at="2022-10-17T20:57:24 MSK" duration-ms="816" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- stop -->
      </class> <!-- Lecture9.Lecture9_3Test -->
    </test> <!-- Lecture 9 test set 1.4 -->
  </suite> <!-- Lecture 9 -->
</testng-results>
